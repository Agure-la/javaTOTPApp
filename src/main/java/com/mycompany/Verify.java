package com.mycompany;

import static com.mycompany.DbConnection.connect;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import com.mycompany.RandomOtp;
import com.mycompany.Log;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import org.springframework.beans.factory.annotation.Autowired;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author odeny
 */
public class Verify extends javax.swing.JFrame {

    private int remainingTime = 120;
    private Timer timer;
    private boolean expiredMessageShown = false;
    /**
     * Creates new form Verify
     */
    public Verify() {
        initComponents();
        setLocationRelativeTo(null);
    }
@Autowired
    UserSession userSession;


    public void generateTime(Verify verify){
        
        timer = new Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent event) {
                if (remainingTime > 0) {
                    remainingTime--;
                    timeTextField.setText("OTP Expires in " + remainingTime + " seconds");
                }
//                else {
//                    if (!expiredMessageShown) { // Check if the message dialog has been shown
//                    JOptionPane.showMessageDialog(null, "Your OTP has expired");
//                    expiredMessageShown = true; // Set the flag to true to indicate the message was shown
//                }
//                   // JOptionPane.showMessageDialog(null, "Your OTP has expired");
//                    verify.setVisible(false);
//                    new Login().setVisible(true);
//                    
//                }
            }
        });

        // Start the Timer
        timer.start();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        timeTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        verifyTextField = new javax.swing.JTextField();
        verifyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Verifiaction");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Verification Code");

        timeTextField.setEditable(false);
        timeTextField.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Please Enter the OTP that was send to your Email ");

        verifyTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                verifyKeyTyped(evt);
            }
        });

        verifyButton.setText("Verify");
        verifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeTextField)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addComponent(verifyTextField)
                    .addComponent(verifyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(verifyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(verifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //make the field to only allow digits
    private void verifyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_verifyKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            verifyTextField.setEditable(false);
           // evt.consume();
        }
        else{
            verifyTextField.setEditable(true);
        }
    }//GEN-LAST:event_verifyKeyTyped

    //retrieves OTP from the db
    public int getOtpFromDatabase(String userEmail) {
    int otp = 0;
    try {
        Connection connection = connect();
        Statement stmt = connection.createStatement();
        String query = "SELECT otp_code FROM otp_codes WHERE user_email = '" + userEmail + "'";
        ResultSet resultSet = stmt.executeQuery(query);
        if (resultSet.next()) {
            otp = resultSet.getInt("otp_code");
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    return otp;
}
    
    //deletes OTP from the db
    private void deleteOtpFromDatabase(String userEmail) {
    try {
        Connection connection = connect();
        Statement stmt = connection.createStatement();
        String deleteQuery = "DELETE FROM otp_codes WHERE user_email = '" + userEmail + "'";
        stmt.executeUpdate(deleteQuery);
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}
    //will check if the OTP entered matches the one that was generated
    private void verifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyButtonActionPerformed
        // TODO add your handling code here:
        

         String textOtp = verifyTextField.getText();
        int expectedOtp = Integer.parseInt(textOtp);
        String userEmail = userSession.getLoggedInUserEmail();
        int retrievedOtp = getOtpFromDatabase(userEmail);
        if (retrievedOtp == expectedOtp) {
        // Delete the OTP from the database
        deleteOtpFromDatabase(userEmail);
        
        if (!RandomOtp.isOTPExpired(expectedOtp)) {
            this.dispose();
            new DashBoard().setVisible(true);
        } 
        else {
            JOptionPane.showInputDialog(null, "The OTP has expired please get new OTP");
            this.dispose();
            new Login().setVisible(true);
        }
    } else {
        JOptionPane.showInputDialog(null, "Please Enter a valid OTP");
    }
        


    }//GEN-LAST:event_verifyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Verify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Verify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Verify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Verify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Verify().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField timeTextField;
    private javax.swing.JButton verifyButton;
    private javax.swing.JTextField verifyTextField;
    // End of variables declaration//GEN-END:variables
}
