/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany;

import static com.mycompany.DbConnection.connect;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.springframework.beans.factory.annotation.Autowired;

/**
 *
 * @author odeny
 */
public class OrderDashboard extends javax.swing.JFrame {

    /**
     * Creates new form OrderDashboard
     */
    public OrderDashboard() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderBar = new javax.swing.JPanel();
        deliveryOrderLabel = new javax.swing.JLabel();
        pickupLabel = new javax.swing.JLabel();
        cancelOrderLabel = new javax.swing.JLabel();
        myDeliveryLabel = new javax.swing.JLabel();
        myPickupLabel = new javax.swing.JLabel();
        ordersLabel = new javax.swing.JLabel();
        backToDashBoard = new javax.swing.JButton();
        updateOrderLabel = new javax.swing.JLabel();
        ordersTopLabel = new javax.swing.JLabel();
        orderContentBar = new javax.swing.JPanel();
        upperPanel = new javax.swing.JPanel();
        orderSearchLabel = new javax.swing.JLabel();
        helpLabel = new javax.swing.JLabel();
        trackOrderPanel = new javax.swing.JPanel();
        trackorderLabel = new javax.swing.JLabel();
        schedulePanel = new javax.swing.JPanel();
        scheduleLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ratingsLabel = new javax.swing.JLabel();
        achievementsPanel = new javax.swing.JPanel();
        achievementsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Orders");

        orderBar.setBackground(new java.awt.Color(0, 51, 153));

        deliveryOrderLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        deliveryOrderLabel.setForeground(new java.awt.Color(255, 255, 255));
        deliveryOrderLabel.setText("Create Delivery Order");
        deliveryOrderLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deliveryLabelMouseClicked(evt);
            }
        });

        pickupLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        pickupLabel.setForeground(new java.awt.Color(255, 255, 255));
        pickupLabel.setText("Create Pick Up Order");
        pickupLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pickupLabelMouseClicked(evt);
            }
        });

        cancelOrderLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        cancelOrderLabel.setForeground(new java.awt.Color(255, 255, 255));
        cancelOrderLabel.setText("Cancel Order");
        cancelOrderLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelOrderMouseClicked(evt);
            }
        });

        myDeliveryLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        myDeliveryLabel.setForeground(new java.awt.Color(255, 255, 255));
        myDeliveryLabel.setText("My Delivery Orders");
        myDeliveryLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myDeliveryOrdersMouseClicked(evt);
            }
        });

        myPickupLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        myPickupLabel.setForeground(new java.awt.Color(255, 255, 255));
        myPickupLabel.setText("My Pick Up Orders");
        myPickupLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myPickupLabelMouseClicked(evt);
            }
        });

        ordersLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        ordersLabel.setForeground(new java.awt.Color(255, 255, 255));
        ordersLabel.setText("Orders");
        ordersLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersLabelMouseClicked(evt);
            }
        });

        backToDashBoard.setBackground(new java.awt.Color(0, 51, 204));
        backToDashBoard.setFont(new java.awt.Font("PT Serif", 1, 13)); // NOI18N
        backToDashBoard.setForeground(new java.awt.Color(255, 255, 255));
        backToDashBoard.setText("DashBoard");
        backToDashBoard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToDashBoardActionPerformed(evt);
            }
        });

        updateOrderLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        updateOrderLabel.setForeground(new java.awt.Color(255, 255, 255));
        updateOrderLabel.setText("Update Order");
        updateOrderLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateOrderMousedClicked(evt);
            }
        });

        ordersTopLabel.setBackground(new java.awt.Color(0, 51, 153));
        ordersTopLabel.setFont(new java.awt.Font("PT Serif", 1, 18)); // NOI18N
        ordersTopLabel.setForeground(new java.awt.Color(255, 255, 255));
        ordersTopLabel.setText("Orders DashBoard");

        javax.swing.GroupLayout orderBarLayout = new javax.swing.GroupLayout(orderBar);
        orderBar.setLayout(orderBarLayout);
        orderBarLayout.setHorizontalGroup(
            orderBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderBarLayout.createSequentialGroup()
                .addGroup(orderBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderBarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(orderBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateOrderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(myPickupLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(myDeliveryLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deliveryOrderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pickupLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancelOrderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ordersLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(orderBarLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(backToDashBoard)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ordersTopLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        orderBarLayout.setVerticalGroup(
            orderBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ordersTopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(deliveryOrderLabel)
                .addGap(27, 27, 27)
                .addComponent(pickupLabel)
                .addGap(28, 28, 28)
                .addComponent(cancelOrderLabel)
                .addGap(26, 26, 26)
                .addComponent(myDeliveryLabel)
                .addGap(26, 26, 26)
                .addComponent(myPickupLabel)
                .addGap(26, 26, 26)
                .addComponent(updateOrderLabel)
                .addGap(27, 27, 27)
                .addComponent(ordersLabel)
                .addGap(37, 37, 37)
                .addComponent(backToDashBoard)
                .addGap(74, 74, 74))
        );

        orderContentBar.setBackground(new java.awt.Color(255, 255, 255));

        upperPanel.setBackground(new java.awt.Color(255, 255, 255));

        orderSearchLabel.setBackground(new java.awt.Color(255, 255, 255));
        orderSearchLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        orderSearchLabel.setForeground(new java.awt.Color(51, 0, 51));
        orderSearchLabel.setText("Search");

        helpLabel.setBackground(new java.awt.Color(255, 255, 255));
        helpLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        helpLabel.setForeground(new java.awt.Color(51, 0, 51));
        helpLabel.setText("Help");
        helpLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                helpMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout upperPanelLayout = new javax.swing.GroupLayout(upperPanel);
        upperPanel.setLayout(upperPanelLayout);
        upperPanelLayout.setHorizontalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orderSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(helpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        upperPanelLayout.setVerticalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderSearchLabel)
                    .addComponent(helpLabel))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        trackOrderPanel.setBackground(new java.awt.Color(255, 255, 255));

        trackorderLabel.setBackground(new java.awt.Color(255, 255, 255));
        trackorderLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        trackorderLabel.setForeground(new java.awt.Color(51, 0, 51));
        trackorderLabel.setText("Track Order");
        trackorderLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trackOrderMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout trackOrderPanelLayout = new javax.swing.GroupLayout(trackOrderPanel);
        trackOrderPanel.setLayout(trackOrderPanelLayout);
        trackOrderPanelLayout.setHorizontalGroup(
            trackOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trackOrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(trackorderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        trackOrderPanelLayout.setVerticalGroup(
            trackOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, trackOrderPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(trackorderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        schedulePanel.setBackground(new java.awt.Color(255, 255, 255));

        scheduleLabel.setBackground(new java.awt.Color(255, 255, 255));
        scheduleLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        scheduleLabel.setForeground(new java.awt.Color(51, 0, 51));
        scheduleLabel.setText("Schedule Order");
        scheduleLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scheduleMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout schedulePanelLayout = new javax.swing.GroupLayout(schedulePanel);
        schedulePanel.setLayout(schedulePanelLayout);
        schedulePanelLayout.setHorizontalGroup(
            schedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scheduleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        schedulePanelLayout.setVerticalGroup(
            schedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, schedulePanelLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(scheduleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        ratingsLabel.setBackground(new java.awt.Color(255, 255, 255));
        ratingsLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        ratingsLabel.setForeground(new java.awt.Color(51, 0, 51));
        ratingsLabel.setText("Customer Ratings");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ratingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(ratingsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        achievementsPanel.setBackground(new java.awt.Color(255, 255, 255));

        achievementsLabel.setBackground(new java.awt.Color(255, 255, 255));
        achievementsLabel.setFont(new java.awt.Font("PT Serif", 0, 13)); // NOI18N
        achievementsLabel.setForeground(new java.awt.Color(51, 0, 51));
        achievementsLabel.setText("Achievements");
        achievementsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                achievementMousedClicked(evt);
            }
        });

        javax.swing.GroupLayout achievementsPanelLayout = new javax.swing.GroupLayout(achievementsPanel);
        achievementsPanel.setLayout(achievementsPanelLayout);
        achievementsPanelLayout.setHorizontalGroup(
            achievementsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(achievementsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(achievementsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        achievementsPanelLayout.setVerticalGroup(
            achievementsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(achievementsPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(achievementsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout orderContentBarLayout = new javax.swing.GroupLayout(orderContentBar);
        orderContentBar.setLayout(orderContentBarLayout);
        orderContentBarLayout.setHorizontalGroup(
            orderContentBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderContentBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderContentBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(upperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(orderContentBarLayout.createSequentialGroup()
                        .addGroup(orderContentBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(trackOrderPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                        .addGroup(orderContentBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(schedulePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(achievementsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        orderContentBarLayout.setVerticalGroup(
            orderContentBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderContentBarLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(upperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(orderContentBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(trackOrderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(schedulePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(55, 55, 55)
                .addGroup(orderContentBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(achievementsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(orderBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(orderContentBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(orderContentBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    CreateEditOrderForm createEditOrderForm = new CreateEditOrderForm();
    JFrame frame = new JFrame();
    JFrame pickupFrame = new JFrame();
    JFrame ordersFrame = new JFrame();
    
    
    private void deliveryLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliveryLabelMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        createEditOrderForm.setVisible(true);
    }//GEN-LAST:event_deliveryLabelMouseClicked

    private void cancelOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelOrderMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Only Admins Cancel an order, call support");
    }//GEN-LAST:event_cancelOrderMouseClicked

    @Autowired
    UserSession userSession;
    
    //retrieve all delivery orders for a user
    private void myDeliveryOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myDeliveryOrdersMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        
        JTable table = new JTable();
 
         String loggedUser = userSession.getLoggedInUserEmail();
         
        // Set column names for the table
        String[] columnNames = {"Business Name", "Product Name", "Quantity", "Price", "Pickup", "Description", "Phone No", "Order No", "Status", "email"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        table.setModel(model);

        // Fetch data from the database
        Connection connection = connect();
        try  {
            String query = "SELECT business_name, product_name, quantity, price, pickup, description, phone_no, order_no, status FROM orders WHERE status = 'pending' AND email = ?";
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setString(1, loggedUser);
            ResultSet resultSet = statement.executeQuery();

            // Iterate over the result set and add rows to the table model
            while (resultSet.next()) {
                String businessName = resultSet.getString("business_name");
                String productName = resultSet.getString("product_name");
                int quantity = resultSet.getInt("quantity");
                double price = resultSet.getDouble("price");
                String pickup = resultSet.getString("pickup");
                String description = resultSet.getString("description");
                String phoneNo = resultSet.getString("phone_no");
                int orderNo = resultSet.getInt("order_no");
                String status = resultSet.getString("status");
                String email = resultSet.getString("email");

                Object[] row = {businessName, productName, quantity, price, pickup, description, phoneNo, orderNo, status, email};
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        // Add the table to a JScrollPane and set it as the content pane of the frame
        JScrollPane scrollPane = new JScrollPane(table);
        frame.setContentPane(scrollPane);
        frame.pack();
        
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        new OrderDashboard().setVisible(true);
        
        frame.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            new OrderDashboard().setVisible(true);
        }
    });
        frame.setVisible(true);
    }//GEN-LAST:event_myDeliveryOrdersMouseClicked

    //retrieves all pickup orders
    private void myPickupLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myPickupLabelMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        JTable table = new JTable();
        
        String loggedUser = userSession.getLoggedInUserEmail();

        // Set column names for the table
        String[] columnNames = {"Business Name", "Product Name", "Quantity", "Price", "Pickup", "Description", "Phone No", "Order No", "Status", "email"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        table.setModel(model);

        // Fetch data from the database
        Connection connection = connect();
        try  {
            String query = "SELECT business_name, product_name, quantity, price, pickup, description, phone_no, order_no, status FROM orders WHERE status = 'pending' AND email = ?";
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setString(1, loggedUser);
            ResultSet resultSet = statement.executeQuery();

            // Iterate over the result set and add rows to the table model
            while (resultSet.next()) {
                String businessName = resultSet.getString("business_name");
                String productName = resultSet.getString("product_name");
                int quantity = resultSet.getInt("quantity");
                double price = resultSet.getDouble("price");
                String pickup = resultSet.getString("pickup");
                String description = resultSet.getString("description");
                String phoneNo = resultSet.getString("phone_no");
                int orderNo = resultSet.getInt("order_no");
                String status = resultSet.getString("status");
                String email = resultSet.getString("email");

                Object[] row = {businessName, productName, quantity, price, pickup, description, phoneNo, orderNo, status, email};
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        // Add the table to a JScrollPane and set it as the content pane of the frame
        JScrollPane scrollPane = new JScrollPane(table);
        pickupFrame.setContentPane(scrollPane);
        pickupFrame.pack();
        
        pickupFrame.setLocationRelativeTo(null);
        pickupFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        pickupFrame.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            new OrderDashboard().setVisible(true);
        }
    });
        
        pickupFrame.setVisible(true);
    }//GEN-LAST:event_myPickupLabelMouseClicked

    
    //retrieves all orders
    private void ordersLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersLabelMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        
        JTable table = new JTable();
        
        String loggedUser = userSession.getLoggedInUserEmail();

        // Set column names for the table
        String[] columnNames = {"Business Name", "Product Name", "Quantity", "Price", "Pickup", "Description", "Phone No", "Order No", "Status", "email"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        table.setModel(model);

        // Fetch data from the database
        Connection connection = connect();
        try  {
            String query = "SELECT * FROM orders WHERE email = ?";
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setString(1, loggedUser);
            ResultSet resultSet = statement.executeQuery();

            // Iterate over the result set and add rows to the table model
            while (resultSet.next()) {
                String businessName = resultSet.getString("business_name");
                String productName = resultSet.getString("product_name");
                int quantity = resultSet.getInt("quantity");
                double price = resultSet.getDouble("price");
                String pickup = resultSet.getString("pickup");
                String description = resultSet.getString("description");
                String phoneNo = resultSet.getString("phone_no");
                String orderNo = resultSet.getString("order_no");
                String status = resultSet.getString("status");
                String email = resultSet.getString("email");

                Object[] row = {businessName, productName, quantity, price, pickup, description, phoneNo, orderNo, status, email};
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        // Add the table to a JScrollPane and set it as the content pane of the frame
        JScrollPane scrollPane = new JScrollPane(table);
        ordersFrame.setContentPane(scrollPane);
        ordersFrame.pack();
        
        ordersFrame.setLocationRelativeTo(null);
        ordersFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
         ordersFrame.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            new OrderDashboard().setVisible(true);
        }
    });
        ordersFrame.setVisible(true);
    }//GEN-LAST:event_ordersLabelMouseClicked

    private void updateOrderMousedClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateOrderMousedClicked
        // TODO add your handling code here:
        this.setVisible(false);
        createEditOrderForm.setVisible(true);
    }//GEN-LAST:event_updateOrderMousedClicked

    private void backToDashBoardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToDashBoardActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new DashBoard().setVisible(true);
    }//GEN-LAST:event_backToDashBoardActionPerformed

    private void pickupLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pickupLabelMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        createEditOrderForm.setVisible(true);
    }//GEN-LAST:event_pickupLabelMouseClicked

    private void trackOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trackOrderMouseClicked
        // TODO add your handling code here:
         this.setVisible(false);

    JTable table = new JTable();
    
    String loggedUser = userSession.getLoggedInUserEmail();

    // Set column names for the table
    String[] columnNames = {"Business Name", "Product Name", "Quantity", "Price", "Pickup", "Description", "Phone No", "Order No", "Status", "email"};
    DefaultTableModel model = new DefaultTableModel(columnNames, 0);
    table.setModel(model);

    // Fetch data from the database
    try (Connection connection = connect()) {
        String query = "SELECT business_name, product_name, quantity, price, pickup, description, phone_no, order_no, status FROM orders WHERE status = 'pending'";
        try (PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {

            // Iterate over the result set and add rows to the table model
            while (resultSet.next()) {
                String businessName = resultSet.getString("business_name");
                String productName = resultSet.getString("product_name");
                int quantity = resultSet.getInt("quantity");
                double price = resultSet.getDouble("price");
                String pickup = resultSet.getString("pickup");
                String description = resultSet.getString("description");
                String phoneNo = resultSet.getString("phone_no");
                String orderNo = resultSet.getString("order_no");
                String status = resultSet.getString("status");

                Object[] row = {businessName, productName, quantity, price, pickup, description, phoneNo, orderNo, status};
                model.addRow(row);
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }

    // Add the table to a JScrollPane and set it as the content pane of the frame
    JScrollPane scrollPane = new JScrollPane(table);
    frame.setContentPane(scrollPane);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    frame.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            new OrderDashboard().setVisible(true);
        }
    });
    frame.setVisible(true);
    }//GEN-LAST:event_trackOrderMouseClicked

    //should return the counts of all orders for a user
    private void achievementMousedClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_achievementMousedClicked
        // TODO add your handling code here:
         this.setVisible(false);

    JTable table = new JTable();

    // Set column names for the table
    String[] columnNames = {"Business Name", "Product Name", "Quantity", "Price", "Pickup", "Description", "Phone No", "Order No", "Status"};
    DefaultTableModel model = new DefaultTableModel(columnNames, 0);
    table.setModel(model);

    // Fetch data from the database
    try (Connection connection = connect()) {
        String query = "SELECT business_name, product_name, quantity, price, pickup, description, phone_no, order_no, status FROM orders WHERE status = 'completed'";
        try (PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {

            // Iterate over the result set and add rows to the table model
            while (resultSet.next()) {
                String businessName = resultSet.getString("business_name");
                String productName = resultSet.getString("product_name");
                int quantity = resultSet.getInt("quantity");
                double price = resultSet.getDouble("price");
                String pickup = resultSet.getString("pickup");
                String description = resultSet.getString("description");
                String phoneNo = resultSet.getString("phone_no");
                String orderNo = resultSet.getString("order_no");
                String status = resultSet.getString("status");

                Object[] row = {businessName, productName, quantity, price, pickup, description, phoneNo, orderNo, status};
                model.addRow(row);
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }

    // Add the table to a JScrollPane and set it as the content pane of the frame
    JScrollPane scrollPane = new JScrollPane(table);
    frame.setContentPane(scrollPane);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    frame.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            new OrderDashboard().setVisible(true);
        }
    });
    frame.setVisible(true);
        
    }//GEN-LAST:event_achievementMousedClicked

    private void scheduleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheduleMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Order Schedulling Has Not Been Allowed For This Account");
    }//GEN-LAST:event_scheduleMouseClicked

    private void helpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_helpMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Call sopport  072000000");
    }//GEN-LAST:event_helpMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel achievementsLabel;
    private javax.swing.JPanel achievementsPanel;
    private javax.swing.JButton backToDashBoard;
    private javax.swing.JLabel cancelOrderLabel;
    private javax.swing.JLabel deliveryOrderLabel;
    private javax.swing.JLabel helpLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel myDeliveryLabel;
    private javax.swing.JLabel myPickupLabel;
    private javax.swing.JPanel orderBar;
    private javax.swing.JPanel orderContentBar;
    private javax.swing.JLabel orderSearchLabel;
    private javax.swing.JLabel ordersLabel;
    private javax.swing.JLabel ordersTopLabel;
    private javax.swing.JLabel pickupLabel;
    private javax.swing.JLabel ratingsLabel;
    private javax.swing.JLabel scheduleLabel;
    private javax.swing.JPanel schedulePanel;
    private javax.swing.JPanel trackOrderPanel;
    private javax.swing.JLabel trackorderLabel;
    private javax.swing.JLabel updateOrderLabel;
    private javax.swing.JPanel upperPanel;
    // End of variables declaration//GEN-END:variables
}
